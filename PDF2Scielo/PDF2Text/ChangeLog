2007-08-24  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* PDFPoppler.cs, Normalizer.cs, StringMatch.cs, StyleReader.cs: Se
	  modificó para usar Logger.

2007-08-21  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/test-valid.xml: Se modificó la expresión regular para que tome
	  encabezados de la nueva edición
	* Normalizer.cs: Se lanza una excepción cuando una regla que obtiene un
	  bloque no encuentra matches.

2007-08-21  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* PDF2Text.mdp, Test/TestNormalizer.cs, Test/TestAtmNormalizer.cs,
	  Normalizer.cs, AtmNormalizer.cs, RawDocument.cs: Se cambio el
	  nombre de la clase AtmNormalizer a Normalizer puesto que ahora es
	  una clase generica que hace uso de los documentos de estilo para
	  realizar la normalizacion del documento. Tambien se cambio el
	  nombre de la prueba de unidad TestAtmNormalizer a TestNormalizer.

2007-08-21  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestModifier.cs, Test/TestRule.cs: Needed changes to get
	  MarkKeyword Rule node from the XML.

2007-08-20  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/test-valid.xml: Se agregaron las reglas para obtener el front,
	  body y back.
	* StringMatch.cs: Se modificó ApplyModifiers para cuando una regla no
	  estática no tiene modificadores
	* AtmNormalizer.cs: Se agregaron los casos para las reglas que obtienen
	  el front, body y back.
	* Rule.cs: Cambios menores

2007-08-15  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* PDF2Text.mdp: Se agregó el cambio de nombre
	* Test/TestStyleReader.cs: Pruebas de unidad para la clase StyleReader
	* Test/TestModifier.cs, Test/TestRule.cs: Cambios menores para reflejar
	  el cambio de nombre de test-schema.
	* Test/test-invalid.xml: Documento de estilo con errores.
	* Test/test-valid.xml: El archivo de estilo antes llamado test-schema
	* Test/test-schema.xml: se cambió su nombre a test-valid
	* StyleReader.cs: Ahora lanza una excepción si el documento de estilo
	  no es válido

2007-08-15  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestModifier.cs, Test/TestRule.cs, StyleReader.cs, Modifier.cs,
	  Rule.cs: Se modificaron para que usen el namespace
	* Test/test-schema.xml: se descomentó la parte del namespace

2007-08-13  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/test-schema.xml: Se modificaron algunas reglas usando positive
	  lookahead para simplificarlas.
	* StyleReader.cs: Se añadió el método GetRules para leer reglas del xml
	  y se modificó el método GetStyleFile para eliminar un error al
	  correrse en Release.
	* AtmNormalizer.cs: Se eliminaron los métodos por regla para aplicarlas
	  secuencialmente desde el arreglo de reglas.

2007-08-08  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/test-schema.xml: Se mejoraron las expresiones regulares y los
	  postfijos para que presenten los cambios de AtmNormalizer.
	* AtmNormalizer.cs: Se modificó para que se use ApplyModifier.

2007-08-08  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/test-schema.xml: Se cambio la expresion regular para capturar
	  los finales de las citas.
	* AtmNormalizer.cs: Se removio la regla para terminar las citas.

2007-08-07  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/test-schema.xml: Se arregló el prefijo para MarkStartParagraph1.
	* StringMatch.cs: Se implementó TrimEnd.
	* AtmNormalizer.cs: Se quitó el uso de Eval.
	* Modifier.cs: Se agregó TrimEnd

2007-08-07  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* AtmNormalizer.cs: Se cambió Eval por ApplyRule, una generalización de
	  Eval.

2007-08-07  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestRule.cs: Se quitó que sust sea literal.
	* AtmNormalizer.cs: Se modificaron varios métodos para que usen Eval.
	* Rule.cs: Se agregó que se quiten los escapes a sust.

2007-08-07  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestStringMatch.cs: Se agregaron las pruebas para los nuevos
	  métodos de StringMatch.
	* Test/TestModifier.cs: Cambios menores.
	* Test/TestRule.cs: Cambios menores
	* StringMatch.cs: Se crearon los métodos ApplyModifier y
	  ApplyModifiers.
	* AtmNormalizer.cs: Se añadieron casos a Eval
	* Modifier.cs: Se agregó un constructor nuevo.

2007-08-06  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* PDF2Text.mdp: Se añadieron las nuevas clases.
	* Test/TestModifier.cs: Nueva clase de prueba para Modifier.
	* Test/TestRule.cs: Se añadieron las pruebas para los modificadores.
	* Modifier.cs: Nueva clase para implementar los modificadores de las
	  reglas
	* Rule.cs: Se agregó la inicialización de los modificadores al
	  constructor.

2007-08-03  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestRule.cs: Se agregaron las pruebas para los distintos tipos
	  de regla.
	* Rule.cs: Se cambió la forma de obtener el unique_match.

2007-08-03  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestRule.cs: Se agregaron las pruebas para los atributos de Rule
	  inicializados en el constructor. 
	* Rule.cs: Se añadió al constructor la inicialización de sust,
	  unique_match y type. También se cambió el tipo de expected_matches
	  de int a boolean y se cambió su nombre a unique_match

2007-08-02  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestStringMatch.cs: Se modificó para que quedara la versión
	  final y se migraron algunas pruebas a TestStringMatchCollection.
	* Test/TestStringMatchCollection.cs: Clase de Prueba para
	  StringMatchCollection.
	* Test/TestRule.cs: Clase de prueba para la clase Rule.
	* Test/test-schema.xml: Se comentaron los atributos del nodo raiz para
	  quitar errores.
	* PDF2Text.mdp: Se añadieron los archivos de prueba.
	* StringMatch.cs: Cambios menores. Se agregó un caso de error. 
	* StringMatchCollection.cs: Cambio menor. Se eliminó el método Item.
	* Rule.cs: Nueva clase para representar una regla.

2007-08-02  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestStringMatch.cs: Se cambió el uso del foreach por Count
	* StringMatchCollection.cs: Método Count añadido

2007-08-01  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestFront.txt, Test/TestBody.txt, Test/TestBack.txt: Archivos
	  con las partes de un artículo para ser usados en pruebas
	* Test/TestStringMatch.cs: Archivo de prueba para la clase StringMatch
	* PDF2Text.mdp: Archivos de prueba agregados.
	* StringMatch.cs: Se agregó el método HasResultMatch

2007-08-01  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestAtmNormalizer.cs: Se eliminaron las pruebas para los métodos
	  que fueron reemplazados por la funcionalidad de la clase
	  StringMatchCollection.
	* Test/test-schema.xml: Se modificaron las reglas para que muestren los
	  cambios hechos con la utilización de la nueva clase
	  StringMatchCollection.
	* AtmNormalizer.cs: Cambios para usar las nuevas clases StringMatch y
	  StringMatchCollection para manejar el emparejamiento de patrones.
	* StringMatchCollection.cs: Se agregó la clase interna que implementa
	  IEnumerator para obtener un enumerador que se usa para poder usar
	  foreach

2007-07-31  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestAtmNormalizer.cs: Se cambió la prueba para obtener dos
	  nuevas para cada tipo de match.
	* PDF2Text.mdp: Se agregaron las nuevas clases.
	* StringMatch.cs: Nueva clase para optimizar el uso de los resultados
	  de las expresiones regulares
	* AtmNormalizer.cs: Se modificó para usar las nuevas clases.
	* StringMatchCollection.cs: Nueva clase para implementar una colección
	  de StringMatch

2007-07-31  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* AtmNormalizer.cs: Cambios de espacios en el archivo.

2007-07-31  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* AtmNormalizer.cs: Se borraron los métodos ReplacePattern y
	  RemovePattern. Se comentó la declaración del StyleReader y se quitó
	  el uso de Get matches para ahora utilizar GetStringMatches
	* INormalizable.cs: Se quitaron  los métodos ReplacePattern,
	  ReplaceFootNotes, ReplaceChars, RemovePattern y GetMatches

2007-07-30  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* Test/TestAtmNormalizer.cs: Se agregó el test para el nuevo método
	  GetStringMatches de AtmNormalizer
	* Document.cs: Se arreglaron los tabs post-emacs
	* AtmNormalizer.cs: Se agregó el método GetStringMatches que usa un
	  backreference llamado Result para obtener las cadenas del Match

2007-07-30  Full Name <Email Address> 

	Se realizaron pruebas en TestPDFTexColumn

